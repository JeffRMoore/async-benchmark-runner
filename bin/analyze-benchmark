#!/usr/bin/env node
'use strict';

const parseArgs = require('minimist');
const fs = require('fs');
const path = require('path');

const reportResult = require('../src/report/report').reportResult;
const compareResults = require('../src/report/compare').compareResults;

const defaultSignificanceThreshold = 0.05;
const defaultConfidenceLevel = 0.95;

const argv = parseArgs(process.argv.slice(2));

if (argv._.length > 2) {
  console.log('Can only analyze 1 or 2 benchmark result files at a time');
  process.exit(1);
}

let files = [];

if (argv._.length === 0) {
  const resultDir = path.resolve(
    process.cwd(),
    argv['result-dir'] ? argv['result-dir'] : 'benchmark-results'
  );
  const availableResults = fs.readdirSync(resultDir).sort();
  if (availableResults.length > 0) {
    files.push(
      path.join(resultDir,
      availableResults[availableResults.length-1])
    );
  }
  if (availableResults.length > 1) {
    files.push(
      path.join(resultDir,
      availableResults[availableResults.length-2])
    );
  }
} else {
  files = argv._;
}

const suiteResults = files.map(filename => {
  const contents = fs.readFileSync(filename, 'utf8');
  return JSON.parse(contents);
});

if (suiteResults.length === 1) {
  reportResult(suiteResults[0], console.log);
}

if (suiteResults.length === 2) {
  const significanceThreshold =
    argv['significance-threshold'] !== undefined ?
      Number(argv['significance-threshold']) : defaultConfidenceLevel;
  const confidenceLevel =
    argv['confidence-level'] !== undefined ?
      Number(argv['confidence-level']) : defaultConfidenceLevel;
  compareResults(
    suiteResults[0],
    suiteResults[1],
    console.log,
    significanceThreshold,
    confidenceLevel
    );
}
